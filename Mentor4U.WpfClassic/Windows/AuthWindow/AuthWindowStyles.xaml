<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- #region ALIGNMENT -->
    <Style x:Key="StyleCentreAlignment" TargetType="{x:Type FrameworkElement}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="StyleRightAlignment" TargetType="{x:Type FrameworkElement}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    
    <Style x:Key="StyleLeftAlignment" TargetType="{x:Type FrameworkElement}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!-- #endregion ALIGNMENT -->
    
    <!-- #region STACK_PANEL -->
    <Style x:Key="StyleHeaderPanel" TargetType="{x:Type StackPanel}"
           BasedOn="{StaticResource StyleCentreAlignment}">
        <Setter Property="Margin" Value="20 "/>
    </Style>
    
    <Style x:Key="StyleButtonPanel" TargetType="{x:Type StackPanel}"
           BasedOn="{StaticResource StyleHeaderPanel}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="20"></Setter>
    </Style>
    <!-- #endregion STACK_PANEL -->
    <!-- #region BUTTON -->
    <Style x:Key="StyleButtonBase" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontSize" Value="20"></Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="7">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                
                <Setter Property="Background" Value="Chocolate"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StyleButtonDefault" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonBase}">
        <Style.Setters>
            <Setter Property="Margin" Value="10 0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Foreground" Value="White"/>    
        </Style.Setters>
    </Style>
    
    <Style x:Key="StyleButtonAuth" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkGreen"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StyleButtonRestore" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkOrange"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Orange"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StyleButtonRegister" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkBlue"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Blue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- #endregion BUTTON -->
</ResourceDictionary>